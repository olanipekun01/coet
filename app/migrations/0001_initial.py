# Generated by Django 3.2.25 on 2024-12-27 06:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.college')),
            ],
        ),
        migrations.CreateModel(
            name='HealthDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_ailment', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=3, null=True, verbose_name='Requires Special Medical Attention')),
                ('ailment_details', models.TextField(blank=True, null=True, verbose_name='Ailment Details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=500)),
                ('is_current', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_upload', models.FileField(blank=True, null=True, upload_to='applications/payment_evidence/', verbose_name='Payment Evidence')),
                ('jamb_upload', models.FileField(blank=True, null=True, upload_to='applications/jamb_results/', verbose_name='JAMB Result')),
                ('waec_upload', models.FileField(blank=True, null=True, upload_to='applications/waec_results/', verbose_name='WAEC Result')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('other_name', models.CharField(blank=True, max_length=100, null=True)),
                ('occupation', models.CharField(blank=True, max_length=200, null=True)),
                ('place_of_work', models.CharField(blank=True, max_length=200, null=True)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('degree', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalDetails',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=150, null=True)),
                ('state_of_origin', models.CharField(blank=True, max_length=100, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('local_government_area', models.CharField(blank=True, max_length=100, null=True)),
                ('denomination', models.CharField(blank=True, choices=[('christian', 'Christian'), ('muslim', 'Muslim'), ('traditional', 'Traditional')], max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('desired_program', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.programme')),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='ParentsGuardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_surname', models.CharField(blank=True, max_length=100, null=True)),
                ('father_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_other_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_occupation', models.CharField(blank=True, max_length=200, null=True)),
                ('father_place_of_work', models.CharField(blank=True, max_length=200, null=True)),
                ('father_telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('father_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mother_surname', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_other_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_occupation', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_place_of_work', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('mother_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('guardian_surname', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_other_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_occupation', models.CharField(blank=True, max_length=200, null=True)),
                ('guardian_place_of_work', models.CharField(blank=True, max_length=200, null=True)),
                ('guardian_telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('guardian_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='OLevelQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitting', models.IntegerField(choices=[(1, 'One Sitting'), (2, 'Two Sittings')])),
                ('first_exam_type', models.CharField(blank=True, max_length=50, null=True)),
                ('first_exam_year', models.IntegerField(blank=True, null=True)),
                ('first_school_name', models.CharField(blank=True, max_length=255, null=True)),
                ('first_school_address', models.TextField(blank=True, null=True)),
                ('first_exam_centre', models.CharField(blank=True, max_length=255, null=True)),
                ('first_exam_period_from', models.DateField(blank=True, null=True)),
                ('first_exam_period_to', models.DateField(blank=True, null=True)),
                ('first_subjects_grades', models.TextField(blank=True, null=True)),
                ('second_exam_type', models.CharField(blank=True, max_length=50, null=True)),
                ('second_exam_year', models.IntegerField(blank=True, null=True)),
                ('second_school_name', models.CharField(blank=True, max_length=255, null=True)),
                ('second_school_address', models.TextField(blank=True, null=True)),
                ('second_exam_centre', models.CharField(blank=True, max_length=255, null=True)),
                ('second_exam_period_from', models.DateField(blank=True, null=True)),
                ('second_exam_period_to', models.DateField(blank=True, null=True)),
                ('second_subjects_grades', models.TextField(blank=True, null=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='ModeOfEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_mode', models.CharField(choices=[('UTME', 'UTME'), ('DIRECT ENTRY', 'Direct Entry')], max_length=20)),
                ('jamb_reg_number', models.CharField(max_length=20, unique=True)),
                ('subject1', models.CharField(default='Use of English', max_length=100)),
                ('score1', models.IntegerField()),
                ('subject2', models.CharField(blank=True, max_length=100, null=True)),
                ('score2', models.IntegerField(blank=True, null=True)),
                ('subject3', models.CharField(blank=True, max_length=100, null=True)),
                ('score3', models.IntegerField(blank=True, null=True)),
                ('subject4', models.CharField(blank=True, max_length=100, null=True)),
                ('score4', models.IntegerField(blank=True, null=True)),
                ('first_choice', models.CharField(max_length=100)),
                ('second_choice', models.CharField(max_length=100)),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='Declaration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('consent', models.BooleanField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=255, null=True)),
                ('heard_from', models.CharField(blank=True, choices=[('Social Media', 'Social Media'), ('Radio Advert', 'Radio Advert'), ('Newspaper Advert', 'Newspaper Advert'), ('Other', 'Other')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='ALevelQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(blank=True, max_length=255, null=True)),
                ('school_address', models.TextField(blank=True, null=True)),
                ('exam_centre', models.CharField(blank=True, max_length=255, null=True)),
                ('exam_period_from', models.DateField(blank=True, null=True)),
                ('exam_period_to', models.DateField(blank=True, null=True)),
                ('subjects_grades', models.TextField(blank=True, null=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('course_of_study', models.CharField(blank=True, max_length=255, null=True)),
                ('certificate_issued', models.CharField(blank=True, max_length=255, null=True)),
                ('graduating_grade', models.CharField(blank=True, max_length=50, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='applications/additionalcredentials/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('instructor', 'Instructor')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
